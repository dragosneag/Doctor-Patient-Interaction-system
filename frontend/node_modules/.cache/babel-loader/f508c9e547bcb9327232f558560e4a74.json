{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documente\\\\Facultate\\\\An 3\\\\Semestrul 1\\\\New folder\\\\ProjectFirstTry\\\\front\\\\src\\\\components\\\\ViewPatients.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewPatients = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const patients = state.patients;\n  const navigate = useNavigate();\n  const [prescriptions, setPrescription] = useState([]);\n  const [diagnostics, setDiagnostics] = useState([]);\n  const [q, setQ] = useState(\"\");\n\n  const onLogOutSubmit = e => {\n    e.preventDefault();\n    navigate('/', {});\n  };\n\n  useEffect(() => {\n    const getPrescriptions = async () => {\n      const prescriptionsFromLocal = await fetchPrescriptions();\n      console.log(prescriptionsFromLocal);\n      setPrescription(prescriptionsFromLocal);\n    };\n\n    getPrescriptions();\n\n    const getMedh = async () => {\n      const medhFromLocal = await fetchMedH();\n      console.log(medhFromLocal);\n      setDiagnostics(medhFromLocal);\n    };\n\n    getMedh();\n  }, []);\n\n  const fetchMedH = async () => {\n    const res = await fetch(`http://localhost:8080/medicalHistories`);\n    const data = await res.json();\n\n    if (data) {\n      return data;\n    } else {\n      return undefined;\n    }\n  };\n\n  const fetchPrescriptions = async () => {\n    const res = await fetch(`http://localhost:8080/prescriptions`);\n    const data = await res.json();\n\n    if (data) {\n      return data;\n    } else {\n      return undefined;\n    }\n  };\n\n  const seeDetails = async id => {\n    const prescriptions1 = await fetchPrescriptions();\n    const medicalHistories1 = await fetchMedH();\n    const prescriptions = prescriptions1.filter(p => p.patient.idpatient == id || p.patient === id);\n    const medicalHistories = medicalHistories1.filter(p => p.patient.idpatient == id || a.patient === id);\n    console.log(prescriptions);\n    console.log(medicalHistories);\n    console.log(id);\n\n    if (medicalHistories) {\n      navigate('/view-patient-details', {\n        state: {\n          prescriptions: prescriptions,\n          medicalHistories: medicalHistories\n        }\n      });\n    } else {\n      alert('There are no records for this patient');\n      return;\n    }\n  };\n\n  function search(rows) {\n    return rows.filter(row => row.fullName.toLowerCase().indexOf(q.toLowerCase()) > -1);\n  }\n\n  const patients2 = search(patients);\n  const columns = patients2[0] && Object.keys(patients2[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#0b4a2b',\n          marginLeft: 50,\n          fontSize: 50\n        },\n        children: \"DocConnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        style: {\n          marginLeft: 1000\n        },\n        type: \"submit\",\n        id: \"btn-log-out\",\n        onClick: e => onLogOutSubmit(e),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            height: 30\n          },\n          value: q,\n          onChange: e => setQ(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-stripped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: patients2.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => seeDetails(p.idpatient),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", p.fullName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.phoneNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, p.idpatient, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPatients, \"Cr6TIQGHvEXX0i2yAh65r0pKQBs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = ViewPatients;\nexport default ViewPatients;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPatients\");","map":{"version":3,"sources":["D:/Documente/Facultate/An 3/Semestrul 1/New folder/ProjectFirstTry/front/src/components/ViewPatients.js"],"names":["useState","useEffect","useNavigate","useLocation","ViewPatients","state","patients","navigate","prescriptions","setPrescription","diagnostics","setDiagnostics","q","setQ","onLogOutSubmit","e","preventDefault","getPrescriptions","prescriptionsFromLocal","fetchPrescriptions","console","log","getMedh","medhFromLocal","fetchMedH","res","fetch","data","json","undefined","seeDetails","id","prescriptions1","medicalHistories1","filter","p","patient","idpatient","medicalHistories","a","alert","search","rows","row","fullName","toLowerCase","indexOf","patients2","columns","Object","keys","color","marginLeft","fontSize","height","target","value","map","phoneNumber","email"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nconst ViewPatients = ( ) => {\r\n    const {state} = useLocation()\r\n    const patients = state.patients\r\n    const navigate = useNavigate()\r\n    const[prescriptions, setPrescription] = useState([])\r\n    const[diagnostics, setDiagnostics] = useState([])\r\n    const [q ,setQ] = useState(\"\")\r\n    \r\n    const onLogOutSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        navigate('/', {\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const getPrescriptions = async () => {\r\n            const prescriptionsFromLocal = await fetchPrescriptions()\r\n            console.log(prescriptionsFromLocal)\r\n            setPrescription(prescriptionsFromLocal)\r\n        }\r\n        getPrescriptions()\r\n\r\n        const getMedh = async () => {\r\n            const medhFromLocal = await fetchMedH()\r\n            console.log(medhFromLocal)\r\n            setDiagnostics(medhFromLocal)\r\n        }\r\n        getMedh()\r\n    },[])\r\n\r\n    const fetchMedH = async () => {\r\n        const res = await fetch(`http://localhost:8080/medicalHistories`)\r\n        const data = await res.json()\r\n\r\n        if (data) {\r\n            return data\r\n        } else {\r\n            return undefined\r\n        }\r\n\r\n    }\r\n\r\n    const fetchPrescriptions = async () => {\r\n        const res = await fetch(`http://localhost:8080/prescriptions`)\r\n        const data = await res.json()\r\n\r\n        if (data) {\r\n            return data\r\n        } else {\r\n            return undefined\r\n        }\r\n\r\n    }\r\n    const seeDetails = async (id) => {\r\n        const prescriptions1 = await fetchPrescriptions();\r\n\r\n        const medicalHistories1 = await fetchMedH();\r\n\r\n        const prescriptions = prescriptions1.filter((p) => (p.patient.idpatient  == id || p.patient === id));\r\n\r\n        const medicalHistories = medicalHistories1.filter((p) => (p.patient.idpatient  == id || a.patient === id));\r\n\r\n        console.log(prescriptions)\r\n        console.log(medicalHistories)\r\n\r\n        console.log(id)\r\n        if (medicalHistories) {\r\n               navigate('/view-patient-details', {\r\n                        state: {\r\n                            prescriptions : prescriptions,\r\n                            medicalHistories : medicalHistories\r\n                        }\r\n                 })\r\n            } else {\r\n                alert('There are no records for this patient')\r\n                return\r\n                }\r\n    }\r\n\r\n    function search(rows){\r\n        return rows.filter((row)=> row.fullName.toLowerCase().indexOf(q.toLowerCase()) > -1)\r\n    }\r\n    const patients2 = search(patients)\r\n    const columns = patients2[0] && Object.keys(patients2[0]);\r\n    return (\r\n        <div>\r\n            <div class = \"row\">\r\n                <div style={{color: '#0b4a2b', marginLeft : 50, fontSize : 50}}>DocConnect</div>\r\n                <button className = \"btn\" style = {{marginLeft : 1000}} type=\"submit\" id='btn-log-out' onClick={(e) => onLogOutSubmit(e)}>\r\n                    Log out\r\n                </button>\r\n            </div>\r\n            <div className=\"container-2\">\r\n            <div>\r\n                <input type=\"text\" style = {{height: 30}} value={q} onChange={(e) => setQ(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <table className=\"table table-stripped\">\r\n                <thead>\r\n                    <tr >\r\n                        <td>Name</td>\r\n                        <td>Phone</td>\r\n                        <td>Email</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        patients2.map(\r\n                            p =>\r\n                            <tr key = {p.idpatient} onClick={() => seeDetails(p.idpatient) }>\r\n                                <td> {p.fullName}</td>\r\n                                <td>{p.phoneNumber}</td>\r\n                                <td>{p.email}</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    </tbody>  \r\n                    \r\n                </table>\r\n            </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ViewPatients"]},"metadata":{},"sourceType":"module"}