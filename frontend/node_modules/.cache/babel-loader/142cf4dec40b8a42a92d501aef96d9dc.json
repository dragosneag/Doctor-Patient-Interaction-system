{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documente\\\\Facultate\\\\An 3\\\\Semestrul 1\\\\New folder\\\\ProjectFirstTry\\\\front\\\\src\\\\components\\\\DoctorAppointmentsPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DoctorAppointmentsPage = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const appointments = state.appointments;\n  const doctor = state.doctor;\n  const navigate = useNavigate();\n  const [newDate, setDateValue] = useState(new Date());\n  const [patients, setPatients] = useState([]);\n\n  const fetchPatients = async () => {\n    const res = await fetch(`http://localhost:8080/patients`);\n    const data = await res.json();\n\n    if (data) {\n      return data;\n    } else {\n      return undefined;\n    }\n  };\n\n  useEffect(() => {\n    const getPatients = async () => {\n      const patientsFromLocal = await fetchPatients();\n      console.log(patientsFromLocal);\n      setPatients(patientsFromLocal);\n    };\n\n    getPatients();\n  }, []);\n\n  function getLocaleDateString() {\n    const formats = {\n      \"sv-SE\": \"yyyy-MM-dd\"\n    };\n  }\n\n  const onLogOutSubmit = e => {\n    e.preventDefault();\n    navigate('/', {});\n  };\n\n  const writeThings = async id => {\n    console.log(id);\n    const appointment = appointments.find(app => app.idappointment == id);\n    const res = await fetch(`http://localhost:8080/patients`);\n    const data = await res.json();\n    const patient = data.find(patient => patient.idpatient === appointment.patient);\n    console.log(patient);\n    navigate('/prescription-diagnostic', {\n      state: {\n        doctor: doctor,\n        patient: patient\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#0b4a2b',\n          marginLeft: 50,\n          fontSize: 50\n        },\n        children: \"DocConnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        style: {\n          marginLeft: 1000\n        },\n        type: \"submit\",\n        id: \"btn-log-out\",\n        onClick: e => onLogOutSubmit(e),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: appointments.map((appointment, index) => appointment.date && /*#__PURE__*/_jsxDEV(Appointment2, {\n          appointment: appointment,\n          onClick: writeThings\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DoctorAppointmentsPage, \"5ZbswmVU47DU+FYRVNIsHodJ/bI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = DoctorAppointmentsPage;\nexport default DoctorAppointmentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorAppointmentsPage\");","map":{"version":3,"sources":["D:/Documente/Facultate/An 3/Semestrul 1/New folder/ProjectFirstTry/front/src/components/DoctorAppointmentsPage.js"],"names":["useState","useEffect","useNavigate","useLocation","DoctorAppointmentsPage","state","appointments","doctor","navigate","newDate","setDateValue","Date","patients","setPatients","fetchPatients","res","fetch","data","json","undefined","getPatients","patientsFromLocal","console","log","getLocaleDateString","formats","onLogOutSubmit","e","preventDefault","writeThings","id","appointment","find","app","idappointment","patient","idpatient","color","marginLeft","fontSize","map","index","date"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\n\r\nconst DoctorAppointmentsPage = ( ) => {\r\n    const {state} = useLocation()\r\n    const appointments = state.appointments\r\n    const doctor = state.doctor\r\n    const navigate = useNavigate()\r\n    const [newDate, setDateValue] = useState(new Date())\r\n    const [patients, setPatients] = useState([])\r\n\r\n    const fetchPatients = async () => {\r\n        const res = await fetch(`http://localhost:8080/patients`)\r\n        const data = await res.json()\r\n\r\n        if (data) {\r\n            return data\r\n        } else {\r\n            return undefined\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const getPatients = async () => {\r\n            const patientsFromLocal = await fetchPatients()\r\n            console.log(patientsFromLocal)\r\n            setPatients(patientsFromLocal)\r\n        }\r\n\r\n        getPatients()\r\n    },[])\r\n\r\n    function getLocaleDateString() {\r\n        const formats = {\r\n            \"sv-SE\": \"yyyy-MM-dd\"\r\n        }\r\n    }\r\n    const onLogOutSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        navigate('/', {\r\n        })\r\n    }\r\n\r\n    const writeThings = async (id) => {\r\n        console.log(id)\r\n\r\n        const appointment = appointments.find((app) => app.idappointment == id)\r\n\r\n        const res = await fetch(`http://localhost:8080/patients`)\r\n        const data = await res.json()\r\n\r\n        const patient = data.find((patient) => patient.idpatient === appointment.patient)\r\n\r\n\r\n        console.log(patient)\r\n        navigate('/prescription-diagnostic', {\r\n            state: {\r\n                doctor : doctor,\r\n                patient : patient\r\n            }\r\n     })\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div class = \"row\">\r\n                <div style={{color: '#0b4a2b', marginLeft : 50, fontSize : 50}}>DocConnect</div>\r\n                <button className = \"btn\" style = {{marginLeft : 1000}} type=\"submit\" id='btn-log-out' onClick={(e) => onLogOutSubmit(e)}>\r\n                    Log out\r\n                </button>\r\n            </div>\r\n            <div className=\"container-2\">\r\n                <div>\r\n                    {appointments.map((appointment, index) => (\r\n                        (appointment.date) && <Appointment2 key = {index} appointment = {appointment} onClick= {writeThings}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default DoctorAppointmentsPage"]},"metadata":{},"sourceType":"module"}