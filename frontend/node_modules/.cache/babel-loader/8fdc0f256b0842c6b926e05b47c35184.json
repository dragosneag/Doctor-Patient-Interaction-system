{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documente\\\\Facultate\\\\An 3\\\\Semestrul 1\\\\New folder\\\\ProjectFirstTry\\\\front\\\\src\\\\components\\\\SelectDateTimePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { DesktopDatePicker } from \"@mui/lab\";\nimport { TextField } from \"@mui/material\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DesktopTimePicker from '@mui/lab/DesktopTimePicker';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectDateTimePage = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const patientId = state.patientId;\n  const speciality = state.speciality;\n  const doctorId = state.doctorId;\n  const navigate = useNavigate();\n  const [value, setValue] = useState(new Date());\n\n  const onLogOutSubmit = e => {\n    e.preventDefault();\n    navigate('/', {});\n  };\n\n  const onBackSubmit = e => {\n    e.preventDefault();\n    navigate('/patient-page/specialities-page/doctor-page', {\n      state: {\n        patientId: patientId,\n        speciality: speciality\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#0b4a2b',\n          marginLeft: 50,\n          fontSize: 50\n        },\n        children: \"DocConnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        style: {\n          marginLeft: 1000\n        },\n        type: \"submit\",\n        id: \"btn-log-out\",\n        onClick: e => onLogOutSubmit(e),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 10,\n            marginBottom: 30\n          },\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Full Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"For desktop\",\n              value: value,\n              style: {\n                marginLeft: 120\n              },\n              minDate: new Date('2017-01-01'),\n              onChange: newValue => {\n                setValue(newValue);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DesktopTimePicker, {\n              label: \"For desktop\",\n              value: value,\n              style: {\n                marginLeft: 400\n              },\n              onChange: newValue => {\n                setValue(newValue);\n                console.log(newValue);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            style: {\n              marginTop: 400,\n              marginLeft: 120\n            },\n            type: \"submit\",\n            id: \"btn-back\",\n            onClick: e => onBackSubmit(e),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectDateTimePage, \"LKRzWkYVc4YTxMnz5mLq7URMfdk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = SelectDateTimePage;\nexport default SelectDateTimePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectDateTimePage\");","map":{"version":3,"sources":["D:/Documente/Facultate/An 3/Semestrul 1/New folder/ProjectFirstTry/front/src/components/SelectDateTimePage.js"],"names":["useState","useEffect","useNavigate","useLocation","DesktopDatePicker","TextField","AdapterDateFns","LocalizationProvider","DesktopTimePicker","Stack","SelectDateTimePage","state","patientId","speciality","doctorId","navigate","value","setValue","Date","onLogOutSubmit","e","preventDefault","onBackSubmit","color","marginLeft","fontSize","marginBottom","newValue","params","console","log","marginTop"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { DesktopDatePicker } from \"@mui/lab\"\r\nimport { TextField } from \"@mui/material\"\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\r\nimport DesktopTimePicker from '@mui/lab/DesktopTimePicker'\r\nimport Stack from '@mui/material/Stack'\r\n\r\nconst SelectDateTimePage = () => {\r\n    const {state} = useLocation()\r\n    const patientId = state.patientId\r\n    const speciality = state.speciality\r\n    const doctorId = state.doctorId\r\n    const navigate = useNavigate()\r\n\r\n    const [value, setValue] = useState(new Date())\r\n\r\n    const onLogOutSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        navigate('/', {\r\n        })\r\n    }\r\n\r\n    const onBackSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        navigate('/patient-page/specialities-page/doctor-page', {\r\n            state: {\r\n                patientId : patientId,\r\n                speciality : speciality\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <div className = \"row\">\r\n                <div style={{color: '#0b4a2b', marginLeft : 50, fontSize : 50}}>DocConnect</div>\r\n                <button className = \"btn\" style = {{marginLeft : 1000}} type=\"submit\" id='btn-log-out' onClick={(e) => onLogOutSubmit(e)}>\r\n                    Log out\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <div className = \"container-2\">\r\n                    <div style={{marginLeft : 10, marginBottom : 30}} className=\"form-control\">\r\n                        <label> Full Name </label>\r\n                    </div>\r\n                    <div>\r\n                        <Stack spacing={3}>\r\n                            <DesktopDatePicker\r\n                                label=\"For desktop\"\r\n                                value={value}\r\n                                style = {{marginLeft : 120}}\r\n                                minDate={new Date('2017-01-01')}\r\n                                onChange={(newValue) => {\r\n                                    setValue(newValue);\r\n                                }}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                            <DesktopTimePicker\r\n                                label=\"For desktop\"\r\n                                value={value}\r\n                                style = {{marginLeft : 400}}\r\n                                onChange={(newValue) => {\r\n                                    setValue(newValue);\r\n                                    console.log(newValue)\r\n                                }}\r\n                                renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                        </Stack>\r\n                    </div>\r\n                    <div className = \"row\">\r\n                        <button className = \"btn\" style = {{marginTop : 400, marginLeft : 120}} type=\"submit\" id='btn-back' onClick={(e) => onBackSubmit(e)}>\r\n                            Back\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </LocalizationProvider>\r\n    )\r\n};\r\n\r\nexport default SelectDateTimePage;\r\n"]},"metadata":{},"sourceType":"module"}